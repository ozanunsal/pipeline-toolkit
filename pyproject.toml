[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pipeline-toolkit"
version = "0.2.0"
description = "Enhanced AI-Powered MCP Client with Interactive CLI and Advanced Tool Orchestration"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Pipeline Toolkit Team", email = "maintainers@pipeline-toolkit.dev"}
]
keywords = ["mcp", "gemini", "ai", "client", "tools", "automation", "interactive", "cli", "orchestration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Environment :: Console",
    "Environment :: Console :: Curses",
]

dependencies = [
    "mcp[cli]>=1.10.1",
    "google-genai>=0.11.0",
    "nest_asyncio>=1.5.0",
    "httpx>=0.28.0",
    "python-dotenv>=1.0.0",
    "rich>=13.7.0",
    "prompt-toolkit>=3.0.43",
    "click>=8.1.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

full = [
    "watchdog>=3.0.0",  # For file watching
    "psutil>=5.9.0",    # For system monitoring
    "pydantic>=2.0.0",  # For enhanced validation
]

[project.urls]
Homepage = "https://github.com/pipeline-toolkit/pipeline-toolkit"
Repository = "https://github.com/pipeline-toolkit/pipeline-toolkit"
Issues = "https://github.com/pipeline-toolkit/pipeline-toolkit/issues"
Documentation = "https://pipeline-toolkit.readthedocs.io/"
Changelog = "https://github.com/pipeline-toolkit/pipeline-toolkit/blob/main/CHANGELOG.md"

[project.scripts]
pipeline-toolkit = "src.cli:cli_main"
ptk = "src.cli:cli_main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/config",
    "/examples",
    "/docs",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
known_first_party = ["src"]
force_grid_wrap = 0
combine_as_imports = true
include_trailing_comma = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "src/__init__.py",
    "tests/*",
    "venv/*",
    ".venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
